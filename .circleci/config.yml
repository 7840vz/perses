version: 2.1
orbs:
  go: circleci/go@1.5.0
  node: circleci/node@4.2.0
jobs:
  build-front:
    executor:
      name: node/default
      tag: '14.16'
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/internal/api/front/perses/node_modules
          app-dir: '~/project/internal/api/front/perses'
      - run: cd ~/project/internal/api/front/perses && npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - internal/api/front/perses/dist

  lint-front:
    executor:
      name: node/default
      tag: '14.16'
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/internal/api/front/perses/node_modules
          app-dir: '~/project/internal/api/front/perses'
      - run: cd ~/project/internal/api/front/perses && npm run lint

  build-back:
    executor:
      name: go/default
      tag: '1.16'
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: make build
  test:
    docker:
    - image: circleci/golang:1.16
    - image: 'quay.io/coreos/etcd:v3.4.7'
      command:
      - /usr/local/bin/etcd
      - --advertise-client-urls=http://0.0.0.0:2379
      - --listen-client-urls=http://0.0.0.0:2379
    steps:
      - checkout
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
          - go-mod-v1-{{ checksum "go.sum" }}
      - run: go mod download
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/home/circleci/go/pkg/mod"
      - run: make integration-test
      - run: bash <(curl -s https://codecov.io/bash)

  check_format:
    executor:
      name: go/default
      tag: '1.16'
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run: "make checkformat"

workflows:
  main:
    jobs:
      - build-front
      - lint-front
      - build-back:
          requires:
            - build-front
      - test:
          requires:
            - build-front
      - check_format
